<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Upload Rituale .L</title>
</head>
<body style="background:#1a1a1a; color:#d4af37; font-family:Times New Roman, serif;">
  <h1>üìú Upload Rituale `.L` su Vercel Blob</h1>
  <input type="file" id="fileInput" />
  <button onclick="upload()">Carica File</button>
  <p id="result"></p>

  <script type="module">
    import { put } from "https://esm.sh/@vercel/blob";

    async function upload() {
      const fileInput = document.getElementById("fileInput");
      const file = fileInput.files[0];

      if (!file) {
        alert("Seleziona un file prima.");
        return;
      }

      const arrayBuffer = await file.arrayBuffer();
      const content = new TextDecoder().decode(arrayBuffer);

      const { url } = await put("rituali/" + file.name, content, {
        access: "public",
        token: "vercel_XXXXXXXXXXXXXXXXXXXXXXXX", // üîê Inserisci qui la tua token
      });

      document.getElementById("result").innerHTML =
        `‚úÖ File caricato con successo:<br><a href="${url}" target="_blank">${url}</a>`;
    }
  </script>
</body>
</html>import os
from zipfile import ZipFile

# Define folder structure for a basic React frontend project
folder_structure = {
    "frontend": {
        "public": {
            "index.html": """<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>SipnoSis</title>
  </head>
  <body>
    <div id="root"></div>
  </body>
</html>"""
        },
        "src": {
            "App.js": """import React from 'react';

function App() {
  return (
    <div>
      <h1>Benvenuto su SipnoSis</h1>
      <p>L‚Äôoracolo delle macchie ti aspetta...</p>
    </div>
  );
}

export default App;
""",
            "index.js": """import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<React.StrictMode><App /></React.StrictMode>);
"""
        },
        "package.json": """{
  "name": "sipnosis",
  "version": "1.0.0",
  "private": true,
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  }
}"""
    }
}

# Create folders and files
base_path = "/mnt/data/react-frontend-template"
os.makedirs(base_path, exist_ok=True)

def create_structure(base, structure):
    for name, content in structure.items():
        path = os.path.join(base, name)
        if isinstance(content, dict):
            os.makedirs(path, exist_ok=True)
            create_structure(path, content)
        else:
            with open(path, "w") as f:
                f.write(content)

create_structure(base_path, folder_structure)

# Zip the directory
zip_path = "/mnt/data/react-frontend-template.zip"
with ZipFile(zip_path, 'w') as zipf:
    for root, dirs, files in os.walk(base_path):
        for file in files:
            full_path = os.path.join(root, file)
            rel_path = os.path.relpath(full_path, base_path)
            zipf.write(full_path, arcname=os.path.join("frontend", rel_path))

zip_path
